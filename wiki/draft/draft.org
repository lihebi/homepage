#+TITLE: Draft

* Remarkable


https://github.com/reHackable/maxio

* Android

H2O APN setting

- Name: ATT Nextgenphone
- APN: att.mvno
- Port: 80
- MMSC: http://mmsc.mobile.att.net
- MMS Proxy: 66.209.11.33
- MMS Port: 80
- MCC: 310
- MNC: 410
- APN Type: default, mms, supl, fota, hipri
- APN Protocol: IPv4/IPv6

Unset but with value:
- MVNO Type: None
- Bearer: Unspecified

Everything else Not set, including
- Proxy
- Username
- Password
- Server
- Authentication Type
- MVNO Value

* C
** Context Sensitivity of C
- https://eli.thegreenplace.net/2007/11/24/the-context-sensitivity-of-cs-grammar/
- The lexer hack https://en.wikipedia.org/wiki/The_lexer_hack
- Clang use a thin lexer to avoid this problem, which is what I'm
  going to use as well


Here is the C lexer rule and grammar for yacc
- lex: http://www.quut.com/c/ANSI-C-grammar-l.html
- yacc: http://www.quut.com/c/ANSI-C-grammar-y.html

* Math

** Calculus
Calculus has two main branches:
- differential calculus
  - it is mainly about derivative. The process of finding a derivative
    is called differentiation.
  - $\frac{dy}{dx}|_{a}$ is Leibniz's notation
  - f'(a) is Lagrange's notation
- integral calculus
  - definite integral
  - indefinite integral (also antiderivative)

** Lagrange multiplier

When solving a maxima of a function, with subject to a constraint, we
often use /Lagrange multiplier/. Say:
- maximize $f(x,y)$
- subject to $g(x,y)=0$
We are going to introduce the Lagrange multiplier $\lambda$ such that
- $L(x,y,\lambda) = f(x,y) - \lambda g(x,y)$ is called Lagrange
  function.
- Compute the gradient of L, and compute the stationary points. Those
  points will be the space of the solution to the original maxima
  problem.

The intuition: at a maximum, f(x,y) cannot be increasing in the
direction of any neighboring point where g = 0.
